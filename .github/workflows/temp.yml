on:
  workflow_dispatch:

# GitHub Actions workflow to deploy to Azure using azd
# To configure required secrets for connecting to Azure, simply run `azd pipeline config`

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

jobs:
  provision_and_deploy:
    defaults:
      run:
        shell: pwsh
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      AZURE_CLIENT_SECRET: ${{ secrets.DATAVERSE_CLIENT_SECRET }}
      DATAVERSE_CLIENT_SECRET: ${{ secrets.DATAVERSE_CLIENT_SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Install PAC
        run: dotnet tool install --global Microsoft.PowerApps.CLI.Tool

      - name: "Az CLI login"
        uses: azure/login@v1
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Setup pac auth
        run: |
          Write-Output $Env:AZURE_CLIENT_ID
          pac auth create -u ${{ vars.DATAVERSE_URL }} -id ${{ env.AZURE_CLIENT_ID }} -cs ${{ env.DATAVERSE_CLIENT_SECRET }} -t ${{ env.AZURE_TENANT_ID }}

      - name: Create Service Principal
        if: false
        run: |
          $token = az account get-access-token --resource=https://api.bap.microsoft.com/ --query accessToken --output tsv
          $headers = @{
              Authorization="Bearer $token"
          };
          Invoke-WebRequest -Headers $headers "https://api.bap.microsoft.com/providers/Microsoft.BusinessAppPlatform/adminApplications/${{ env.AZURE_CLIENT_ID }}?api-version=2020-10-01" -Method Put
          $environmentId = (pac org who --json | ConvertFrom-Json).EnvironmentId;
          $body = ConvertTo-Json -InputObject @{servicePrincipalAppId='2a713c50-ea20-40f0-9b3e-f121bab80fe1'}
          Invoke-WebRequest -Headers $headers https://api.bap.microsoft.com/providers/Microsoft.BusinessAppPlatform/scopes/admin/environments/$environmentId/addAppUser?api-version=2020-10-01 -Method Post -Body $body -ContentType "application/json"

      - name: Assign Role to Function App
        run: pac admin assign-user -u 2a713c50-ea20-40f0-9b3e-f121bab80fe1 -au -env ${{ vars.DATAVERSE_URL }} -r "System Administrator"
